<?xml version="1.0" encoding="UTF-8"?>
<!--%d{HH: mm:ss.SSS}——日志输出时间
    %thread——输出日志的进程名字，这在Web应用以及异步任务处理中很有用
    %-5level——日志级别，并且使用5个字符靠左对齐
    %logger{36}——日志输出者的名字
    %msg——日志消息
    %n——平台的换行符-->
<configuration scan="true" scanPeriod="60 seconds" debug="false">
    <property name="LOG_HOME" value="/home/logs/gyxg/" />
    <!--<property name="LOG_HOME" value="D:/logs/wyc/" />-->
    <property name="APP_NAME" value="gyxg" />
    <contextName>${APP_NAME}</contextName>

    <!--输出到控制台 ConsoleAppender-->
    <appender name="consoleLog" class="ch.qos.logback.core.ConsoleAppender">
        <!--展示格式 layout-->
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d %msg%n</pattern>
        </layout>
    </appender>

    <!-- 输出到控制台 -->
    <appender name="runtime" class="ch.qos.logback.core.rolling.RollingFileAppender" >
        <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
        <File>${LOG_HOME}/runtime.log</File>
        <!-- 配置滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志名称的格式 -->
            <fileNamePattern>${LOG_HOME}/runtime.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 保存的最长时间：天数 -->
            <MaxHistory>90</MaxHistory>
        </rollingPolicy>
        <!-- 输出的格式 -->
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>[%d{yyyy-MM-dd HH:mm:ss}][%-5level]: %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="task" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
        <File>${LOG_HOME}/task.log</File>
        <!-- 配置滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志名称的格式 -->
            <fileNamePattern>${LOG_HOME}/task.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 保存的最长时间：天数 -->
            <MaxHistory>90</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}:  %msg%n</pattern>
        </encoder>
    </appender>

    <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件路径,定义了日志的切分方式——把每一天的日志归档到一个文件中,以防止日志填满整个磁盘空间-->
        <File>${LOG_HOME}/error.log</File>
        <!-- 配置滚动的策略 -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- 日志名称的格式 -->
            <fileNamePattern>${LOG_HOME}/error.%d{yyyy-MM-dd}.log</fileNamePattern>
            <!-- 保存的最长时间：天数 -->
            <MaxHistory>90</MaxHistory>
        </rollingPolicy>
        <encoder class="ch.qos.logback.classic.encoder.PatternLayoutEncoder">
            <charset>UTF-8</charset>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{50}:  %msg%n</pattern>
        </encoder>
    </appender>

    <logger name="runtimeLogger" additivity="false">
        <level value="INFO" />
        <appender-ref ref="runtime" />
    </logger>

    <logger name="taskLogger" additivity="false">
        <level value="INFO" />
        <appender-ref ref="task" />
    </logger>

    <logger name="errorLogger" additivity="false">
        <level value="ERROR" />
        <appender-ref ref="error" />
    </logger>

    <!-- 相当于logger元素，只是name值已经确定为root了 -->
    <root level="info">
        <appender-ref ref="consoleLog" />
        <appender-ref ref="runtime" />
    </root>


</configuration>